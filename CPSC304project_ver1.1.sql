CREATE TABLE Cuisine (
    CuisineID INT,
    Name VARCHAR(1000) NOT NULL,
    Description VARCHAR(1000),
    PRIMARY KEY (CuisineID)
);

CREATE TABLE Location (
    Address VARCHAR(1000) NOT NULL,
    PostalCode VARCHAR(1000) NOT NULL,
    City VARCHAR(1000) NOT NULL,
    Province VARCHAR(1000) NOT NULL,
    PRIMARY KEY (Address, PostalCode)
);

CREATE TABLE Reviewer (
    ReviewerID INT,
    Name VARCHAR(1000) NOT NULL,
    PRIMARY KEY (ReviewerID)
);

CREATE TABLE LeadChef (
    ChefID INT,
    Name VARCHAR(1000) NOT NULL,
    Biography CLOB,
    PRIMARY KEY (ChefID)
);

CREATE TABLE Restaurant (
    RestaurantID INT,
    Name VARCHAR(1000) NOT NULL,
    Website VARCHAR(1000) NOT NULL,
    PriceRange VARCHAR(1000),
    Address VARCHAR(1000),
    PostalCode VARCHAR(1000),
    AverageScore DECIMAL,
    CuisineID INT,
    PRIMARY KEY (RestaurantID),
    FOREIGN KEY (Address, PostalCode) REFERENCES Location(Address, PostalCode) ON DELETE SET NULL,
    FOREIGN KEY (CuisineID) REFERENCES Cuisine(CuisineID) ON DELETE SET NULL
);

CREATE TABLE WorksAtRestaurant (
    ChefID INT NOT NULL,
    RestaurantID INT NOT NULL,
    PRIMARY KEY (ChefID, RestaurantID),
    FOREIGN KEY (ChefID) REFERENCES LeadChef(ChefID),
    FOREIGN KEY (RestaurantID) REFERENCES Restaurant(RestaurantID)
);

CREATE TABLE RestaurantServes (
    RestaurantID INT NOT NULL,
    CuisineID INT NOT NULL,
    PRIMARY KEY (RestaurantID, CuisineID),
    FOREIGN KEY (RestaurantID) REFERENCES Restaurant(RestaurantID),
    FOREIGN KEY (CuisineID) REFERENCES Cuisine(CuisineID)
);

CREATE TABLE SignatureDish (
    DishName VARCHAR(1000) NOT NULL,
    RestaurantID INT NOT NULL,
    Description VARCHAR(1000),
    Course VARCHAR(1000),
    CuisineID INT,
    PRIMARY KEY (DishName, RestaurantID),
    FOREIGN KEY (RestaurantID) REFERENCES Restaurant(RestaurantID),
    FOREIGN KEY (CuisineID) REFERENCES Cuisine(CuisineID) ON DELETE SET NULL
);

CREATE TABLE Award (
    AwardID INT,
    Name VARCHAR(1000) NOT NULL,
    MichelinRating INT,
    Description CLOB,
    RestaurantID INT,
    PRIMARY KEY (AwardID),
    FOREIGN KEY (RestaurantID) REFERENCES Restaurant(RestaurantID) ON DELETE SET NULL
);

CREATE TABLE ProfessionalCritic (
    ReviewerID INT NOT NULL,
    Title VARCHAR(1000),
    PRIMARY KEY (ReviewerID),
    FOREIGN KEY (ReviewerID) REFERENCES Reviewer(ReviewerID) ON DELETE CASCADE
);

CREATE TABLE FoodBlogger (
    ReviewerID INT NOT NULL,
    Website VARCHAR(1000),
    PRIMARY KEY (ReviewerID),
    FOREIGN KEY (ReviewerID) REFERENCES Reviewer(ReviewerID) ON DELETE CASCADE
);

CREATE TABLE Review (
    ReviewID INT GENERATED BY DEFAULT ON NULL AS IDENTITY,
    RestaurantID INT NOT NULL,
    ReviewerID INT NOT NULL,
    "Date" DATE NOT NULL,
    Score INT,
    "Comment" CLOB,
    PRIMARY KEY (ReviewID),
    FOREIGN KEY (ReviewerID) REFERENCES Reviewer(ReviewerID),
    FOREIGN KEY (RestaurantID) REFERENCES Restaurant(RestaurantID)
);
